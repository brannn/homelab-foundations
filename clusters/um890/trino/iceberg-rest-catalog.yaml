apiVersion: apps/v1
kind: Deployment
metadata:
  name: iceberg-rest-catalog
  namespace: iceberg-system
  labels:
    app.kubernetes.io/name: iceberg-rest-catalog
    app.kubernetes.io/component: catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iceberg-rest-catalog
      app.kubernetes.io/component: catalog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iceberg-rest-catalog
        app.kubernetes.io/component: catalog
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: iceberg-rest
          # Using Tabular's Iceberg REST catalog image
          image: tabulario/iceberg-rest:1.6.0
          ports:
            - containerPort: 8181
              name: http
              protocol: TCP
          env:
            # Catalog configuration
            - name: CATALOG_WAREHOUSE
              value: "s3://iceberg/"
            - name: CATALOG_IO__IMPL
              value: "org.apache.iceberg.aws.s3.S3FileIO"
            - name: CATALOG_S3_ENDPOINT
              value: "http://10.0.0.241:80"  # MinIO S3 API LoadBalancer IP
            - name: CATALOG_S3_ACCESS__KEY__ID
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: access-key
            - name: CATALOG_S3_SECRET__ACCESS__KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: secret-key
            - name: CATALOG_S3_PATH__STYLE__ACCESS
              value: "true"
            - name: AWS_REGION
              value: "us-west-1"
            # JVM configuration
            - name: JAVA_OPTS
              value: "-Xmx512m -Xms512m"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 512Mi
          # Health checks
          livenessProbe:
            httpGet:
              path: /v1/config
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /v1/config
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: iceberg-rest-catalog
  namespace: iceberg-system
  labels:
    app.kubernetes.io/name: iceberg-rest-catalog
    app.kubernetes.io/component: catalog
spec:
  type: ClusterIP
  ports:
    - port: 8181
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: iceberg-rest-catalog
    app.kubernetes.io/component: catalog
---
# ServiceMonitor for Prometheus monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: iceberg-rest-catalog
  namespace: iceberg-system
  labels:
    app.kubernetes.io/name: iceberg-rest-catalog
    app.kubernetes.io/component: catalog
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: iceberg-rest-catalog
      app.kubernetes.io/component: catalog
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
